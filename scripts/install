#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_add_secure_repos__3
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE
password=$YNH_APP_ARG_PASSWORD
name=$YNH_APP_ARG_NAME
salt_code=$(ynh_string_random 30)
admin_email=$(ynh_user_get_info $admin 'mail')

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info "Storing installation settings..."

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app language $language
ynh_app_setting_set $app name $name
ynh_app_setting_set $app salt_code $salt_code
ynh_app_setting_set $app admin_email $admin_email

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_print_info "Configuring firewall..."

# Find a free port
port=$(ynh_find_port 3000)
ynh_app_setting_set $app port $port

streaming_port=$(ynh_find_port 4000)
ynh_app_setting_set $app streaming_port $streaming_port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies..."

ynh_install_nodejs 10

ynh_install_app_dependencies $pkg_dependencies

ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_print_info "Creating a PostgreSQL database..."

db_name=$(ynh_sanitize_dbid $app)
db_user=$db_name
db_pwd=$(ynh_string_random 30)
ynh_app_setting_set "$app" db_name "$db_name"
ynh_app_setting_set "$app" db_pwd "$db_pwd"
ynh_psql_test_if_first_run
ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Setting up source files..."

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"
ynh_setup_source "$final_path/src/client" client

#=================================================
# CREATE THE DATA DIRECTORY
#=================================================
ynh_print_info "Create the data directory..."

# Define app's data directory
datadir="/home/yunohost.app/${app}"

# Create app folders
mkdir -p "$datadir"
mkdir -p "$datadir/uploads/avatars"
mkdir -p "$datadir/uploads/max_resolution"

ynh_app_setting_set $app datadir $datadir

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Configuring nginx web server..."

### `ynh_add_nginx_config` will use the file conf/nginx.conf

# Create a dedicated nginx config
ynh_add_nginx_config "datadir streaming_port"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

# Configure Anfora-web
my_config="$final_path/src/config/my_config.yaml"
cp "../conf/my_config.yaml" "$my_config"

ynh_replace_string "__NAME__" "$name" "$my_config"
ynh_replace_string "__DOMAIN__" "$domain" "$my_config"
ynh_replace_string "__DATADIR__" "$datadir" "$my_config"
ynh_replace_string "__FINAL_PATH__" "$final_path" "$my_config"
ynh_replace_string "__SALT_CODE__" "$salt_code" "$my_config"
ynh_replace_string "__DB_USER__" "$db_user" "$my_config"
ynh_replace_string "__DB_PWD__" "$db_pwd" "$my_config"
ynh_replace_string "__DB_NAME__" "$db_name" "$my_config"

# Configure Anfora-streaming
mkdir "$final_path/src/streaming"

index_js="$final_path/src/streaming/index.js"
cp "../conf/index.js" $index_js

ynh_replace_string "__DB_USER__" "$db_user" "$index_js"
ynh_replace_string "__DB_NAME__" "$db_name" "$index_js"
ynh_replace_string "__DB_PWD__" "$db_pwd" "$index_js"
ynh_replace_string "__STREAMING_PORT__" "$streaming_port" "$index_js"

# Configure Anfora-queue
huey_consumer="$final_path/src/huey_consumer.py"
cp "../conf/huey_consumer.py" $huey_consumer

task_main="$final_path/src/tasks.main.huey"
cp "../conf/tasks.main.huey" $task_main

#=================================================
# INSTALL PYTHONZ TO GET PYTHON 3.6.8
#=================================================

# Get pythonz
# curl -kL https://raw.githubusercontent.com/saghul/pythonz/master/pythonz-install
# ./pythonz-install
ynh_setup_source "$final_path/.pythonz" pythonz
export PYTHONZ_ROOT="$final_path/.pythonz"
# Then install it
python $final_path/.pythonz/pythonz_install.py

# Install Python 3.6.6
$final_path/.pythonz/bin/pythonz install 3.6.8

#=================================================
# INSTALL ANFORA
#=================================================

chown -R "$app":root "$final_path"

pushd "$final_path"
	sudo -u $app virtualenv -p $($final_path/.pythonz/bin/pythonz locate 3.6.8) ve3
	sudo -u $app ve3/bin/pip3 install pipenv
	sudo -u $app ve3/bin/pipenv install --python "$final_path/.pythonz/pythons/CPython-3.6.8/bin/python3.6"
popd

pushd "$final_path/src"
	sudo -u $app ../ve3/bin/pipenv run python commands.py -s --config config/my_config.yaml
	sudo -u $app ../ve3/bin/pipenv run python commands.py -d
	sudo -u $app ../ve3/bin/pipenv run python commands.py -u --username "$admin" --password "$password" --email "$admin_email" --is_admin "True"
popd

# Build web interface
pushd "$final_path/src/client"
    ynh_use_nodejs    
    sudo -u $app env PATH=$PATH yarn install
    sudo -u $app env PATH=$PATH yarn build
popd

# Install streaming
pushd "$final_path/src"
    ynh_use_nodejs    
    sudo -u $app env PATH=$PATH npm install express
    sudo -u $app env PATH=$PATH npm install cors
    sudo -u $app env PATH=$PATH npm install sse-express@next
    sudo -u $app env PATH=$PATH npm install passport
    sudo -u $app env PATH=$PATH npm install passport-http-bearer
    sudo -u $app env PATH=$PATH npm install redis
    sudo -u $app env PATH=$PATH npm install pg
popd

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info "Configuring a systemd service..."

# Create a dedicated systemd config
ynh_use_nodejs
ynh_replace_string "__PORT__" "$port" "../conf/anfora-web.service"
ynh_replace_string "__NODEJS_PATH__" "$nodejs_path" "../conf/anfora-streaming.service"
ynh_add_systemd_config "$app-web"       "anfora-web.service"
ynh_add_systemd_config "$app-queue"       "anfora-queue.service"
ynh_add_systemd_config "$app-streaming"       "anfora-streaming.service"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/src/settings.py"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R "$app":root "$final_path"

# Give permission to the datadir
chown -R "$app":root "$datadir"

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add "$app-web"
yunohost service add "$app-queue"
yunohost service add "$app-streaming"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Configuring SSOwat..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# START ANFORA SERVICES
#=================================================
ynh_print_info "Starting Anfora services..."

ynh_systemd_action --action=start --service_name=${app}-web --log_path=systemd
#--line_match="Started ${app}-web"
ynh_systemd_action --action=start --service_name=${app}-queue --log_path=systemd
#--line_match="Started ${app}-worker"
ynh_systemd_action --action=start --service_name=${app}-streaming --log_path=systemd
#--line_match="Started ${app}-streaming"

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
