#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source ../settings/scripts/ynh_add_extra_apt_repos__3
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_print_info "Loading settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
final_path=$(ynh_app_setting_get $app final_path)
db_name=$(ynh_app_setting_get $app db_name)
db_user=$db_name
db_pwd=$(ynh_app_setting_get $app db_pwd)
datadir=$(ynh_app_setting_get $app datadir)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_print_info "Validating restoration parameters..."

ynh_webpath_available $domain $path_url \
	|| ynh_die "Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die "There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_print_info "Restoring the app main directory..."

ynh_restore_file "$final_path"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_print_info "Recreating the dedicated system user..."

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R "$app":root "$final_path"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_print_info "Reinstalling dependencies..."

ynh_install_nodejs 10

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies

ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_print_info "Restoring the PostgreSQL database..."

ynh_psql_test_if_first_run
ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
ynh_psql_execute_file_as_root ./db.sql "$db_name"

#=================================================
# CREATE THE DATA DIRECTORY
#=================================================
ynh_print_info "Create the data directory..."

# Create app folders
mkdir -p "$datadir"
mkdir -p "$datadir/uploads/avatars"
mkdir -p "$datadir/uploads/max_resolution"

chown -R "$app": "$datadir"

#=================================================
# INSTALL PYTHONZ TO GET PYTHON 3.6.8
#=================================================

# Get pythonz
export PYTHONZ_ROOT="$final_path/.pythonz"
# Then install it
python $final_path/.pythonz/pythonz_install.py

# Install Python 3.6.6
$final_path/.pythonz/bin/pythonz install 3.6.8

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_print_info "Restoring the systemd configuration..."

ynh_restore_file "/etc/systemd/system/$app-web.service"
ynh_restore_file "/etc/systemd/system/$app-queue.service"
systemctl enable $app-web.service
systemctl enable $app-queue.service

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add "$app-web"
yunohost service add "$app-queue"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# START ANFORA SERVICES
#=================================================
ynh_print_info "Starting Anfora services..."

ynh_systemd_action --action=start --service_name=${app}-web --log_path=systemd --line_match="Started ${app} Anfora Server"

# Queue service not implemented for now
#ynh_systemd_action --action=start --service_name=${app}-queue --log_path=systemd
#--line_match="Started ${app}-worker"

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Restoration completed for $app"
