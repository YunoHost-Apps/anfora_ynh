#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_add_secure_repos__3
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_print_info "Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin=$(ynh_app_setting_get $app admin)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)
language=$(ynh_app_setting_get $app language)
db_name=$(ynh_app_setting_get $app db_name)
datadir=$(ynh_app_setting_get $app datadir)
port=$(ynh_app_setting_get $app port)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_print_info "Ensuring downward compatibility..."

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set $app is_public 1
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi

# If db_name doesn't exist, create it
if [ -z $db_name ]; then
	db_name=$(ynh_sanitize_dbid $app)
	ynh_app_setting_set $app db_name $db_name
fi

# If final_path doesn't exist, create it
if [ -z $final_path ]; then
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_print_info "Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	read -p "key"
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STOP ANFORA SERVICES
#=================================================
ynh_print_info "Stoppping Anfora services..."

ynh_systemd_action --action=stop --service_name=${app}-web --log_path=systemd
#--line_match="Started ${app} Anfora Server"

# Queue service not implemented for now
#ynh_systemd_action --action=stop --service_name=${app}-queue --log_path=systemd
#--line_match="Started ${app}-worker"

#=================================================
# BACKUP CONFIGURATION
#=================================================
ynh_print_info "Backuping configuration..."

cp -f "$final_path/src/settings.py" "$final_path/src/settings.py.bak"
cp -f "$final_path/src/client/.env" "$final_path/src/client/.env.bak"

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"
ynh_setup_source "$final_path/src/client" client

#=================================================
# RESTORE CONFIGURATION
#=================================================
ynh_print_info "Restoring configuration..."

cp -f "$final_path/src/settings.py.bak" "$final_path/src/settings.py"
cp -f "$final_path/src/client/.env.bak" "$final_path/src/client/.env"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Upgrading nginx web server configuration..."

# Create a dedicated nginx config
ynh_add_nginx_config "datadir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_print_info "Upgrading dependencies..."

ynh_install_nodejs 10

ynh_install_app_dependencies $pkg_dependencies

ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# SPECIFIC UPGRADE
#=================================================
# INSTALL ANFORA
#=================================================

chown -R "$app":root "$final_path"

pushd "$final_path"
	sudo -u $app ve3/bin/pip3 install pipenv
	sudo -u $app ve3/bin/pipenv install --python "$final_path/.pythonz/pythons/CPython-3.6.8/bin/python3.6"
popd

pushd "$final_path/src"
	# disable for now because can't be automated, adsking a question
	# sudo -u $app ../ve3/bin/pipenv run python commands.py -m
popd

# Build web interface
pushd "$final_path/src/client"
    ynh_use_nodejs    
    sudo -u $app env PATH=$PATH yarn install
    sudo -u $app env PATH=$PATH yarn build
popd

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

ynh_backup_if_checksum_is_different "$final_path/src/settings.py"
# Recalculate and store the checksum of the file for the next upgrade.
ynh_store_file_checksum "$final_path/src/settings.py"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info "Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_replace_string "__PORT__" "$port" "../conf/anfora-web.service"
ynh_add_systemd_config "$app-web"       "anfora-web.service"
ynh_add_systemd_config "$app-queue"       "anfora-queue.service"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R "$app":root "$final_path"

# Give permission to the datadir
chown -R "$app":root "$datadir"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Upgrading SSOwat configuration..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# START ANFORA SERVICES
#=================================================
ynh_print_info "Starting Anfora services..."

ynh_systemd_action --action=start --service_name=${app}-web --log_path=systemd --line_match="Started ${app} Anfora Server"

# Queue service not implemented for now
#ynh_systemd_action --action=start --service_name=${app}-queue --log_path=systemd
#--line_match="Started ${app}-worker"

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Upgrade of $app completed"
